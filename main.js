(()=>{var t={766:t=>{t.exports='<!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"> <meta name="viewport" content="width=device-width,initial-scale=1"> <meta http-equiv="X-UA-Compatible" content="ie=edge"> <title>Document</title> </head> <body> <div class="container"></div> </body> </html> '}},e={};function n(i){var s=e[i];if(void 0!==s)return s.exports;var o=e[i]={exports:{}};return t[i](o,o.exports,n),o.exports}(()=>{"use strict";class t{constructor(t){this.parentEl=t,this.onClick=this.onClick.bind(this)}static get markup(){return'\n      <div class="block">\n      <button type="button" class="btn">Click to toggle popover</button> \x3c!-- видимый элемент --\x3e\n      <div class="hidden elem">\n        <div class="content">\n          <div class="title">Popover title</div>\n          <div class="slogan">And here\'s some amazing content. It\'s very engaging. Right?</div>\n        </div>\n      </div>\n      </div>\n    '}static get selector(){return".block"}bindToDOM(){this.parentEl.innerHTML=t.markup,this.element=this.parentEl.querySelector(t.selector),this.element.addEventListener("click",this.onClick)}onClick(t){t.preventDefault(),this.displayOnClick=document.querySelector(".btn"),this.hiddenOn=document.querySelector(".hidden"),this.hiddenOn.classList.toggle("elem"),this.displayOnClick.classList.toggle("borderColor")}}const e=document.querySelector(".container");new t(e).bindToDOM(),n(766)})()})();
//# sourceMappingURL=main.js.map